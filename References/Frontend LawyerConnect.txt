/* eslint-disable no-unused-vars */
import React from 'react'
import { assets } from '../assets/assets'
import { useNavigate } from 'react-router-dom'

const Banner = () => {

  const navigate = useNavigate();

  return (
    <div className='flex bg-primary rounded-lg px-6 sm:px-10 md:px-14 lg:px-12 my-20 md:mx-10'>
      {/* Left Side */}
      <div className='flex-1 py-8 sm:py-10 md:py-16 lg:py-24 lg:pl-5'>
        <div className='text-xl sm:text-2xl md:text-3xl lg:text-5xl text-white font-semibold'>
          <p>Book Appointment</p>
          <p className='mt-4'>With 100+ Trusted Lawyers</p>
        </div>
        <button onClick={() => {navigate('/login'); scrollTo(0, 0)}} className='bg-white text-sm sm:text-base text-gray-600 px-8 py-3 rounded-full mt-6 hover:scale-105 transition-all duration-300'>Create Account</button>
      </div>

      {/* Right Side */}
      <div className='hidden md:block md:w-1/2 lg:w-[370px] relative'>
        <img className='w-full absolute bottom-0 right-0 max-w-md' src={assets.appointment_img} alt="" />
      </div>
    </div>
  )
}

export default Banner

/* eslint-disable no-unused-vars */
import React from 'react'
import { assets } from '../assets/assets'

const Footer = () => {
  return (
    <div className='md:mx-10'>
      <div className='flex flex-col sm:grid grid-cols-[3fr_1fr_1fr] gap-14 my-10 mt-40 text-sm'>
        {/* Left Side */}
        <div>
          <img className='mb-5 w-40' src={assets.logo} alt="" />
          <p className='w-full md:w-2/3 text-gray-600 leading-6'>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Dolorum illo aliquam ex et quasi itaque sequi eum suscipit officiis a, quod voluptatum nihil. Ducimus atque praesentium architecto incidunt, molestiae unde?</p>
        </div>

        {/* Center Side */}
        <div>
          <p className='text-xl font-medium mb-5'>COMPANY</p>
          <ul className='flex flex-col gap-2 text-gray-600'>
            <li>Home</li>
            <li>About Us</li>
            <li>Contact Us</li>
            <li>Privacy Policy</li>
          </ul>
        </div>

        {/* Right Side */}
        <div>
          <p className='text-xl font-medium mb-5'>GET IN TOUCH</p>
          <ul className='flex flex-col gap-2 text-gray-600'>
            <li>+1 234 567 890</li>
            <li>info@lawyerconnect.com</li>
          </ul>
        </div>
      </div>
      <div>
        {/* Copyright Text */}
        <div>
          <hr />
          <p className='py-5 text-sm text-center'>&copy; 2025 Lawyer Connect. All rights reserved.</p>
        </div>
      </div>
    </div>
  )
}

export default Footer

/* eslint-disable no-unused-vars */
import React from 'react'
import { assets } from '../assets/assets'

const Header = () => {
  return (
    <div className='flex flex-col md:flex-row flex-wrap bg-primary rounded-lg px-6 md:px-10 lg:px-20'>

      {/* Left Side */}
      <div className='md:w-1/2 flex flex-col items-start justify-center gap-4 py-10 m-auto md:py-[10vw] md:mb-[-30px]'>
        <p className='text-3xl md:text-4xl lg:text-5xl text-white font-semibold leading-tight md:leading-tight lg:leading-tight'>
          Book Appointment <br /> With Trusted Lawyers
        </p>
        <div className='flex flex-col md:flex-row items-center gap-3 text-white text-sm font-light'>
          <img className='w-28' src={assets.group_profiles} alt="" />
          <p>Simply browse through our extensive list of trusted lawyers <br className='hidden sm:block'/> 
            and select the one that best suits your needs while <br className='hidden sm:block'/>
            scheduling a hassle-free appointment.
          </p>
        </div>
        <a href="#practice" className='flex items-center gap-2 bg-white px-8 py-3 rounded-full text-gray-600 text-sm m-auto md:m-0 hover:scale-105 transition-all duration-300'>
          Book Appointment <img className='w-3' src={assets.arrow_icon} alt="" />
        </a>
      </div>

      {/* Right Side */}
      <div className='mt-20 md:w-1/2 relative'>
        <img className="mt-20 w-full md:absolute buttom-0 h-auto rounded-lg" src={assets.header_img} alt="" />
      </div>

    </div>
  )
}

export default Header

/* eslint-disable no-unused-vars */
import React, { useContext } from "react";
import { useState } from "react";
import { assets } from "../assets/assets";
import { NavLink, useNavigate } from "react-router-dom";
import { AppContext } from "../context/AppContext";

const NavigationBar = () => {

  const navigate = useNavigate();

  const {token, setToken, userData} = useContext(AppContext);

  const [showMenu, setShowMenu] = useState(false);

  const logout = () => {
    setToken(false)
    localStorage.removeItem('token')
  }


  return (
    <div className="flex items-center justify-between text-sm py-4 mb-5 border-b border-b-gray-400">
      <img onClick={()=>{navigate('/'); scrollTo(0, 0)}} className="w-44 cursor-pointer" src={assets.logo} alt="LawyerConnect Logo" />
      <ul className="hidden md:flex items-start gap-5 font-medium">
        <NavLink to='/'>
          <li className="py-1">HOME</li>
          <hr className="border-none outline-none h-0.5 bg-primary w-3/5 m-auto hidden"/>
        </NavLink>
        <NavLink to='/lawyers'>
          <li className="py-1">ALL LAWYERS</li>
          <hr className="border-none outline-none h-0.5 bg-primary w-3/5 m-auto hidden"/>
        </NavLink>
        <NavLink to='/about'>
          <li className="py-1">ABOUT US</li>
          <hr className="border-none outline-none h-0.5 bg-primary w-3/5 m-auto hidden"/> 
        </NavLink>
        <NavLink to='/contact'>
          <li className="py-1">CONTACT</li>
          <hr className="border-none outline-none h-0.5 bg-primary w-3/5 m-auto hidden"/>
        </NavLink>
      </ul>
      <div className="flex items-center gap-4 ">
        {
          token && userData
          ?<div className="flex items-center gap-2 cursor-pointer group relative">
            <img className="w-8 rounded-full" src={userData.image} alt="" />
            <img className="w-2.5" src={assets.dropdown_icon} alt="" />
            <div className="absolute top-0 right-0 pt-14 text-base font-medium text-gray-600 z-20 hidden group-hover:block">
              <div className="min-w-48 bg-stone-100 rounded flex flex-col gap-4 p-4">
                <p onClick={()=>navigate('my-profile')} className="hover:text-black cursor-pointer">My Profile</p>
                <p onClick={()=>navigate('my-appointments')} className="hover:text-black cursor-pointer">Appointments</p>
                <p onClick={logout} className="hover:text-black cursor-pointer">Log Out</p>
              </div>
            </div>
          </div>
          :<button 
          onClick={(e) => {
            e.preventDefault();
            console.log('Navigating to login');
            navigate('/login');
          }} 
          className="bg-primary text-white px-8 py-3 rounded-full font-light hidden md:block"
        >
          Create Account
        </button>
        }
        <img onClick={() => setShowMenu(true)} className="w-6 md:hidden" src={assets.menu_icon} alt="" />
        {/* Mobile Menu*/}
        <div className={` ${showMenu ? 'fixed w-full' :'h-0 w-0'} md:hidden right-0 top-0 bottom-0 z-20 overflow-hidden bg-white transition-all`}>
          <div className="flex items-center justify-between px-5 py-6">
            <img className="w-36" src={assets.logo} alt="" />
            <img className="w-7" onClick={() => setShowMenu(false)} src={assets.cross_icon} alt="" />
          </div>
          <ul className="flex flex-col items-center gap-2 mt-5 px-5 text-lg font-medium">
            <NavLink onClick={() => setShowMenu(false)} to='/'><p className='px-4 py-2 rounded inline-block'>HOME</p></NavLink>
            <NavLink onClick={() => setShowMenu(false)} to='/lawyers'><p className='px-4 py-2 rounded inline-block'>ALL LAWYERS</p></NavLink>
            <NavLink onClick={() => setShowMenu(false)} to='/about'><p className='px-4 py-2 rounded inline-block'>ABOUT</p></NavLink>
            <NavLink onClick={() => setShowMenu(false)} to='/contact'><p className='px-4 py-2 rounded inline-block'>CONTACT</p></NavLink>
          </ul>
        </div>

      </div>
    </div>
  );
};

export default NavigationBar;


/* eslint-disable no-unused-vars */
import React from 'react'
import {practiceData} from '../assets/assets'
import { Link } from 'react-router-dom'

const PracticeArea = () => {
  return (
    <div className='flex flex-col items-center gap-4 py-16 text-gray-800' id='practice'>
      <h1 className='text-3xl font-medium'>Find by Practice Area</h1>
      <p className='sm:w-1/3 text-center text-sm'>Simply browse through our extensive list of trusted lawyers and select the one that best suits your needs while scheduling a hassle-free appointment.</p>
      <div className='flex justify-center gap-4 pt-5 w-full overflow-scroll'>
        {practiceData.map((item,index) => (
          <Link onClick={()=>scrollTo(0, 0)} className='flex flex-col items-center text-xs cursor-pointer flex-shrink-0 hover:translate-y-[-10px] transition-all duration-500' key={index} to={`/lawyers/${item.practice}`}>
            <img className='w-16 sm:w-24 mb-2' src={item.image} alt="" />
            <p>{item.practice}</p>
          </Link>
        ))}
      </div>
    </div>
  )
}

export default PracticeArea

// eslint-disable-next-line no-unused-vars
import React, {useContext, useEffect, useState} from 'react'
import { AppContext } from '../context/AppContext'
import { useNavigate } from 'react-router-dom'

// eslint-disable-next-line react/prop-types
const RelatedLawyers = ({practice,lawyerId}) => {

  const {lawyers} = useContext(AppContext)
  const navigate = useNavigate();

  const [relLaw, setRelLaw] = useState([])

  useEffect(() => {
    if (lawyers.length > 0 && practice) {
      const lawyersData = lawyers.filter((law)=> law.practice === practice && law._id !== lawyerId)
      setRelLaw(lawyersData)
      
    }
  }, [lawyers, practice, lawyerId])

  return (
    <div className='flex flex-col items-center gap-4 my-16 text-gray-900 md:mx-10'>
      <h1 className='text-3xl font-medium'>Top Lawyers here</h1>
      <p className='sm:w-1/3 text-center text-sm'>Here is a list of top lawyers in the country.</p>
      <div className='w-full grid grid-cols-auto gap-4 pt-5 gap-y-6 px-3 sm:px-0'>
        {relLaw.slice(0,5).map((item, index) => (
          <div onClick={() => {navigate(`/appointment/${item._id}`); scrollTo(0, 0)}} className='border border-gray-300 rounded-xl overflow-hidden cursor-pointer hover:translate-y-[-10px] transition-all duration-500' key={index}>
            <img className='bg-blue-50' src={item.image} alt="" />
            <div className='p-4'>
            <div className={`flex items-center gap-2 text-sm text-center ${item.available ? 'text-green-500' : 'text-red-500'}`}>
                <p className={`w-2 h-2 ${item.available ? 'bg-green-500' : 'bg-red-500'} rounded-full`}></p><p>{item.available ? 'Available' : 'Unavailable'}</p>
              </div>
              <p className='text-gray-900 text-lg font-medium'>{item.name}</p>
              <p className='text-gray-600 text-sm '>{item.practice}</p>
            </div>
          </div>
        ))}
      </div>
      <button onClick={()=>{navigate('/lawyers'); scrollTo(0, 0)}} className='bg-blue-50 text-gray-600 px-12 py-3 rounded-full mt-10'>more</button>
    </div>
  )
}

export default RelatedLawyers

/* eslint-disable no-unused-vars */
import React, { useContext } from 'react'
import { useNavigate } from 'react-router-dom'
import { AppContext } from '../context/AppContext';

const TopLawyers = () => {
  const navigate = useNavigate();
  const { lawyers } = useContext(AppContext);

  if (!lawyers) {
    return <div>Loading...</div>;
  }

  return (
    <div className='flex flex-col items-center gap-4 my-16 text-gray-900 md:mx-10'>
      <h1 className='text-3xl font-medium'>Top Lawyers here</h1>
      <p className='sm:w-1/3 text-center text-sm'>Here is a list of top lawyers in the country.</p>
      <div className='w-full grid grid-cols-auto gap-4 pt-5 gap-y-6 px-3 sm:px-0'>
        {lawyers.slice(0,8).map((item, index) => (
          <div onClick={() => {navigate(`/appointment/${item._id}`); scrollTo(0, 0)}} className='border border-gray-300 rounded-xl overflow-hidden cursor-pointer hover:translate-y-[-10px] transition-all duration-500' key={index}>
            <img className='bg-blue-50' src={item.image} alt="" />
            <div className='p-4'>
              <div className={`flex items-center gap-2 text-sm text-center ${item.available ? 'text-green-500' : 'text-red-500'}`}>
                <p className={`w-2 h-2 ${item.available ? 'bg-green-500' : 'bg-red-500'} rounded-full`}></p><p>{item.available ? 'Available' : 'Unavailable'}</p>
              </div>
              <p className='text-gray-900 text-lg font-medium'>{item.name}</p>
              <p className='text-gray-600 text-sm '>{item.practice}</p>
            </div>
          </div>
        ))}
      </div>
      <button onClick={()=>{navigate('/lawyers'); scrollTo(0, 0)}} className='bg-blue-50 text-gray-600 px-12 py-3 rounded-full mt-10'>more</button>
    </div>
  )
}

export default TopLawyers

/* eslint-disable no-unused-vars */
import React, { createContext, useEffect, useState } from 'react';
import PropTypes from 'prop-types';
import axios from 'axios';
import { toast } from 'react-toastify';

// Create the context
export const AppContext = createContext(null);

// Export the context value for components that need it directly
export const appContextValue = {
  lawyers: [], 
  currencySymbol: '$'
};

// Context Provider Component - now using named export
export const AppContextProvider = ({ children }) => {
  const backendUrl = import.meta.env.VITE_BACKEND_URL;
  const [lawyers, setLawyers] = useState([]);
  const [token,setToken] = useState(localStorage.getItem('token')? localStorage.getItem('token'):false);
  const [userData, setUserData] = useState(false);
  


  const getLawyersData = async () => {
    try {
      const { data } = await axios.get(backendUrl + '/api/lawyer/list');
      if (data.success) {
        setLawyers(data.lawyers);
      } else {
        toast.error(data.message);
      }
    } catch (error) {
      console.log(error);
      toast.error(error.message);
    }
  };

  const loadUserProfileData = async () => {
    try {
      const { data } = await axios.get(backendUrl + '/api/user/get-profile', { headers: { token } });
      if (data.success) {
        setUserData(data.userData);
      } else {
        toast.error(data.message);
      }
    } catch (error) {
      console.log(error);
      toast.error(error.message);
    }
  };

    // Create the dynamic context value object that will be provided
    const contextValue = {
      lawyers, getLawyersData,
      currencySymbol: '$',
      token, setToken,
      backendUrl,
      userData,setUserData,
      loadUserProfileData
    };

  useEffect(() => {
    getLawyersData();
  }, []);

  useEffect(() => {
    if (token) {
      loadUserProfileData();
    } else {
      setUserData(false);
    }
  }, [token]);

  return (
    <AppContext.Provider value={contextValue}>
      {children}
    </AppContext.Provider>
  );
};

AppContextProvider.propTypes = {
  children: PropTypes.node.isRequired,
};


// eslint-disable-next-line no-unused-vars
import React from 'react'
import { assets } from '../assets/assets'

const About = () => {
  return (
    <div>
      <div className='text-center text-2xl pt-10 text-grey-500'>
        <p>ABOUT <span className='text-gray-700 font-medium'>US</span></p>
      </div>

      <div className='my-10 flex flex-col md:flex-row gap-12'>
        <img className='w-full md:mx-w-[360px]' src={assets.about_image} alt="" />
        <div className='flex flex-col justify-center gap-6 md:w-2/4 text-sm text-gray-600'>
          <p>Lorem ipsum dolor sit amet consectetur adipisicing elit. Quisquam, quae Lorem ipsum dolor sit amet consectetur adipisicing elit. Eligendi repudiandae aspernatur sit quaerat repellendus, porro perspiciatis odio ab voluptatum dolores, illum libero quod illo praesentium? Voluptas vero officiis ratione excepturi. Lorem ipsum dolor sit amet consectetur adipisicing elit. Iste saepe dolorum mollitia minus tempora, illo nobis iusto voluptatem, quia asperiores corporis eius pariatur praesentium voluptates, quos cupiditate aliquid. Corrupti, suscipit!</p>
          <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Perspiciatis laudantium nisi dolorum nulla amet aliquam consequatur consequuntur odit, reiciendis minus beatae, sint eveniet vero! Praesentium, ab? Odit quis labore facere. Fuga provident voluptatibus architecto doloribus ut unde facilis error ipsum nam, sint veniam reprehenderit voluptatum repudiandae sit iure maiores labore quo fugit repellendus porro libero eos? Voluptatem ipsam ipsum quia.</p>
          <p className='text-gray-800'>Our Vision</p>
          <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Facere distinctio dolores odit voluptatem tenetur cumque modi aperiam perspiciatis? Possimus ipsa corporis illum temporibus pariatur dolore quam reprehenderit ullam similique voluptatum!</p>
        </div>
      </div>

      <div className='text-xl my-4'>
        <p>WHY <span className='text-gray-700 font-semibold'>CHOOSE US</span></p>
      </div>

      <div className='flex flex-col md:flex-row mb-20'>
        <div className='border px-10 md:px-16 py-8 sm:py-16 flex flex-col gap-5 text-[15px] hover:bg-primary hover:text-white trasition-all duration-300 text-gray-600 cursor-pointer'>
          <b>abcdefghij</b>
          <p>Lorem ipsum, dolor sit amet adipisicing elit.</p>
        </div>
        <div className='border px-10 md:px-16 py-8 sm:py-16 flex flex-col gap-5 text-[15px] hover:bg-primary hover:text-white trasition-all duration-300 text-gray-600 cursor-pointer'>
          <b>klmnopqrst</b>
          <p>Lorem ipsum, dolor sit amet adipisicing elit.</p>
        </div>
        <div className='border px-10 md:px-16 py-8 sm:py-16 flex flex-col gap-5 text-[15px] hover:bg-primary hover:text-white trasition-all duration-300 text-gray-600 cursor-pointer'>
          <b>uvwxyzabcd</b>
          <p>Lorem ipsum, dolor sit amet adipisicing elit.</p>
        </div>
      </div>
    </div>
  )
}

export default About

/* eslint-disable no-unused-vars */

import { useContext, useEffect, useState } from "react"
import { useNavigate, useParams } from "react-router-dom"
import { AppContext } from "../context/AppContext"
import { assets } from "../assets/assets"
import RelatedLawyers from "../components/RelatedLawyers"
import { toast } from "react-toastify"
import axios from "axios"

const Appointment = () => {
  const { lawyerId } = useParams()
  const { lawyers, currencySymbol, backendUrl, token, getLawyersData } = useContext(AppContext)
  const daysOfWeek = ["SUN", "MON", "TUE", "WED", "THU", "FRI", "SAT"]

  const navigate = useNavigate()

  const [lawInfo, setLawInfo] = useState(null)
  const [lawyerSlots, setLawyerSlots] = useState([])
  const [slotIndex, setSlotIndex] = useState(0)
  const [slotTime, setSlotTime] = useState("")

  const bookAppointment = async () => {
    if (!token) {
      toast.warn("Please login to book an appointment")
      return navigate("/login")
    }

    // Check if we have slots and a selected time
    if (!lawyerSlots[slotIndex] || !lawyerSlots[slotIndex][0] || !slotTime) {
      toast.error("Please select a valid time slot")
      return
    }

    try {
      const date = lawyerSlots[slotIndex][0].datetime

      const day = date.getDate()
      const month = date.getMonth() + 1
      const year = date.getFullYear()

      const slotDate = day + "_" + month + "_" + year

      const { data } = await axios.post(
        backendUrl + "/api/user/book-appointment",
        { lawyerId, slotDate, slotTime },
        { headers: { token } },
      )
      if (data.success) {
        toast.success(data.message)
        navigate("/my-appointments")
      } else {
        toast.error(data.message)
      }
    } catch (error) {
      console.error(error)
      toast.error(error.message)
    }
  }

  useEffect(() => {
    // Move fetchLawInfo function inside useEffect
    const fetchLawInfo = () => {
      const lawyer = lawyers.find((law) => law._id === lawyerId)
      setLawInfo(lawyer)
    }

    fetchLawInfo()
  }, [lawyers, lawyerId])

  // Add a separate useEffect that depends on lawInfo
  useEffect(() => {
    if (lawInfo) {
      const getAvailableSlots = async () => {
        setLawyerSlots([])

        //Getting current date
        const today = new Date()

        for (let i = 0; i < 7; i++) {
          //getting date with index
          const currentDate = new Date(today)
          currentDate.setDate(today.getDate() + i)

          //setting end time of the date with index
          const endTime = new Date(currentDate)
          endTime.setHours(21, 0, 0, 0)

          //setting hours
          if (today.getDate() === currentDate.getDate()) {
            currentDate.setHours(currentDate.getHours() > 10 ? currentDate.getHours() + 1 : 10)
            currentDate.setMinutes(currentDate.getMinutes() > 30 ? 30 : 0)
          } else {
            currentDate.setHours(10)
            currentDate.setMinutes(0)
          }

          const timeSlots = []

          while (currentDate < endTime) {
            const formattedTime = currentDate.toLocaleTimeString([], {
              hour: "2-digit",
              minute: "2-digit",
            })

            const day = currentDate.getDate()
            const month = currentDate.getMonth() + 1
            const year = currentDate.getFullYear()

            const slotDate = day + "_" + month + "_" + year
            const slotTime = formattedTime

            // Check if slot is already booked - with proper null/undefined checks
            let isSlotAvailable = true
            if (lawInfo && lawInfo.slots_booked && lawInfo.slots_booked[slotDate]) {
              isSlotAvailable = !lawInfo.slots_booked[slotDate].includes(slotTime)
            }

            if (isSlotAvailable) {
              //Add slot to array
              timeSlots.push({
                datetime: new Date(currentDate),
                time: formattedTime,
              })
            }

            //Increment current date by 30 minutes
            currentDate.setMinutes(currentDate.getMinutes() + 30)
          }

          setLawyerSlots((prev) => [...prev, timeSlots])
        }
      }

      getAvailableSlots()
    }
  }, [lawInfo])

  return (
    lawInfo && (
      <div>
        {/*Lawyers Image*/}
        <div className="flex flex-col sm:flex-row gap-4">
          <div>
            <img
              className="bg-primary w-full sm:max-w-72 rounded-lg"
              src={lawInfo.image || "/placeholder.svg"}
              alt=""
            />
          </div>

          <div className="flex-1 border border-gray-400 rounded-lg p-8 py-7 bg-white mx-2 sm:mx-0 mt-[-80px] sm:mt-0">
            {/*Lawyers Details*/}
            <p className="flex items-center gap-2 text-2xl font-medium text-gray-900">
              {lawInfo.name}
              <img className="w-5" src={assets.verified_icon || "/placeholder.svg"} alt="" />
            </p>

            <div className="flex items-center gap-2 text-sm mt-1 text-gray-600">
              <p>
                {lawInfo.degree} - {lawInfo.practice}
              </p>
              <button className="py-0.5 px-2 border text-xs rounded-full">{lawInfo.experience}</button>
            </div>

            {/*Lawyers About*/}
            <div>
              <p className="flex items-center gap-1 text-sm font-medium text-gray-900 mt-3">
                About <img src={assets.info_icon || "/placeholder.svg"} alt="" />
              </p>
              <p className="text-sm text-gray-500 max-w-[700px] mt-1">{lawInfo.about}</p>
            </div>
            <p className="text-gray-500 font-medium mt-4">
              Appointment Fee:{" "}
              <span className="text-gray-600">
                {currencySymbol}
                {lawInfo.fee}
              </span>
            </p>
          </div>
        </div>

        {/*Available Slots*/}
        <div className="sm:ml-72 sm:pl-4 mt-4 font-medium text-gray-700">
          <p>Available Slots</p>
          <div className="flex gap-3 items-center w-full overflow-x-scroll mt-4">
            {lawyerSlots.length > 0 &&
              lawyerSlots.map((item, index) => (
                <div
                  onClick={() => setSlotIndex(index)}
                  className={`text-center py-6 min-w-16 rounded-full cursor-pointer ${
                    slotIndex === index ? "bg-primary text-white" : "border border-gray-200"
                  }`}
                  key={index}
                >
                  <p>{item[0] && daysOfWeek[item[0].datetime.getDay()]}</p>
                  <p>{item[0] && item[0].datetime.getDate()}</p>
                </div>
              ))}
          </div>
          <div className="flex items-center gap-2 overflow-x-scroll mt-4">
            {lawyerSlots.length > 0 &&
              lawyerSlots[slotIndex] &&
              lawyerSlots[slotIndex].map((item, index) => (
                <p
                  onClick={() => setSlotTime(item.time)}
                  className={`text-sm font-light flex-shrink-0 px-5 py-2 rounded-full cursor-pointer ${
                    slotTime === item.time ? "bg-primary text-white" : "border border-gray-200"
                  }`}
                  key={index}
                >
                  {item.time}
                </p>
              ))}
          </div>
          <button
            onClick={bookAppointment}
            className="bg-primary text-white text-sm font-light px-14 py-3 rounded-full my-6"
          >
            Book an Appointment
          </button>
        </div>

        {/*Listing Related Lawyers*/}
        <RelatedLawyers lawyerId={lawyerId} practice={lawInfo.practice} />
      </div>
    )
  )
}

export default Appointment

// eslint-disable-next-line no-unused-vars
import React from 'react'
import { assets } from '../assets/assets'

const Contact = () => {
  return (
    <div>
      <div className='text-center text-2xl pt-10 text-grey-500'>
        <p>CONTACT <span>US</span></p>
      </div>
      <div className='my-10 flex flex-col justify-center md:flex-row gap-10 mb28 text-sm'>
        <img className='w-full md:mx-w-[360px]' src={assets.contact_image} alt="" />
        <div className='flex flex-col justify-center iteams-start gap-6 '>
          <p className='font-semibold text-lg text-gray-600'>OUR OFFICE</p>
          <p className='text-gray-500'> 10th Downing Street <br />Downing Street, London, England</p>
          <p className='text-gray-500'> tel: 123 456- 23456 <br /> contact@lawyerconnect.com</p>
          <p className='font-semibold text-lg text-gray-600'>Careers at Lawyer Connect</p>
          <p className='text-gray-500'>Learn more about out teams and job openings.</p>
          <button className='border border-black px8 py-4 text-sm hover:bg-black hover:text-white transition-all duration-500'>Explore Jobs</button>
        </div>
      </div> 
    </div>
  )
}

export default Contact

// eslint-disable-next-line no-unused-vars
import React from 'react'
import Header from '../components/Header'
import PracticeArea from '../components/PracticeArea'
import TopLawyers from '../components/TopLawyers'
import Banner from '../components/Banner'

const Home = () => {
  return (
    <div>
      <Header/>
      <PracticeArea/>
      <TopLawyers/>
      <Banner/>
    </div>
  )
}

export default Home

/* eslint-disable react-hooks/exhaustive-deps */
/* eslint-disable no-unused-vars */
import React, { useContext, useState, useEffect } from 'react'
import { useNavigate, useParams } from 'react-router-dom'
import { AppContext } from '../context/AppContext'

const Lawyers = () => {

  const { practice } = useParams()
  const [filterLaw,setFilterLaw] = useState([])
  const [showFilter, setShowFilter] = useState(false)
  const navigate = useNavigate()

  const {lawyers} = useContext(AppContext)

  const applyFilter = () => {
    if (practice) {
      setFilterLaw(lawyers.filter(law => law.practice === practice))
    } else {
      setFilterLaw(lawyers)
    }
  }

  useEffect(() => {
    applyFilter()
  }, [lawyers, practice])

  const getPracticeClassName = (practiceName) => {
    return `w-[94vw] sm:w-auto pl-3 py-1.5 pr-16 border border-gray-300 rounded transition-all cursor-pointer ${
      practice === practiceName ? "bg-primary text-white" : ""
    }`
  }

  console.log(practice)

  return (
    <div>
      <p className='text-gray-600'>Browse through practicing field of our lawyers.</p>
      <div className='flex flex-col sm:flex-row items-start gap-5 mt-5'>
        <button className={`py-1 px-3 border rounded text-sm transition-all sm:hidden ${showFilter ? 'bg-primary text-white' : ''}`} onClick={()=>setShowFilter(prev => !prev)}>Filters</button>
        <div className={`flex-col gap-4 text-sm text-gray-600 ${showFilter ? 'flex' : 'hidden sm:flex'}`}>
          <p onClick={() => practice === 'Property Law' ? navigate('/lawyers') : navigate('/lawyers/Property Law')} className={getPracticeClassName("Property Law")}>Property Law</p>
          <p onClick={() => practice === 'Labour Law' ? navigate('/lawyers') : navigate('/lawyers/Labour Law')} className={getPracticeClassName("Labour Law")}>Labour Law</p>
          <p onClick={() => practice === 'Criminal Law' ? navigate('/lawyers') : navigate('/lawyers/Criminal Law')} className={getPracticeClassName("Criminal Law")}>Criminal Law</p>
          <p onClick={() => practice === 'International Law' ? navigate('/lawyers') : navigate('/lawyers/International Law')} className={getPracticeClassName("International Law")}>International Law</p>
          <p onClick={() => practice === 'Contract Law' ? navigate('/lawyers') : navigate('/lawyers/Contract Law')} className={getPracticeClassName("Contract Law")}>Contract Law</p>
          <p onClick={() => practice === 'Family Law' ? navigate('/lawyers') : navigate('/lawyers/Family Law')} className={getPracticeClassName("Family Law")}>Family Law</p>
        </div>
        <div className='w-full grid grid-cols-auto gap-4 gap-y-6'>
          {
            filterLaw.map((item, index) => (
              <div onClick={() => navigate(`/appointment/${item._id}`)} className='border border-gray-300 rounded-xl overflow-hidden cursor-pointer hover:translate-y-[-10px] transition-all duration-500' key={index}>
                <img className='bg-blue-50' src={item.image} alt="" />
                <div className='p-4'>
                  <div className={`flex items-center gap-2 text-sm text-center ${item.available ? 'text-green-500' : 'text-red-500'}`}>
                    <p className={`w-2 h-2 ${item.available ? 'bg-green-500' : 'bg-red-500'} rounded-full`}></p><p>{item.available ? 'Available' : 'Unavailable'}</p>
                  </div>
                  <p className='text-gray-900 text-lg font-medium'>{item.name}</p>
                  <p className='text-gray-600 text-sm '>{item.practice}</p>
                </div>
              </div>
            ))
          }
        </div>
      </div>
    </div>
  )
}

export default Lawyers
/* eslint-disable react-hooks/exhaustive-deps */
/* eslint-disable no-unused-vars */
// eslint-disable-next-line no-unused-vars
import React, {useState, useEffect} from 'react'
import { useContext } from 'react'
import { AppContext } from '../context/AppContext'
import axios from 'axios'
import { toast } from 'react-toastify'
import { useNavigate } from 'react-router-dom'

const Login = () => {

  const navigate = useNavigate()

  const {backendUrl, token, setToken} = useContext(AppContext)

  const [state, setState] = useState('Sign Up')

  const [email,setEmail] = useState('')
  const [password,setPassword] = useState('')
  const [name, setName] = useState('')

  const onSubmitHandler = async (event) => {
    event.preventDefault()

    try {
      if (state === 'Sign Up') {
        const {data} = await axios.post(backendUrl + '/api/user/register', {name, email, password})
        if (data.success) {
          localStorage.setItem('token', data.token)
          setToken(data.token)
        } else{
          toast.error(data.message)
        }
      } else {
        const {data} = await axios.post(backendUrl + '/api/user/login', {email, password})
        if (data.success) {
          localStorage.setItem('token', data.token)
          setToken(data.token)
          } else{
            toast.error(data.message)
          }
      }
    } catch (error) {
      toast.error(error.message)
      console.error(error)
    }
  }

  useEffect(() => {
    if (token) {
      navigate('/')
    }
  },[token])

  return (
    <form onSubmit={onSubmitHandler} className='min-h-[80vh] flex items-center'>
      <div className='flex flex-col gap-4 m-auto items-start p-8 min-w-[340px] sm:min-w-96 border rounded-xl text-zinc-600 shadow-lg'>
        <p className='text-2xl font-semibold'>{state === 'Sign Up' ? "Create Account" : 'Login'}</p>
        <p>Please {state === 'Sign Up' ? "sign up" : 'log in'} to book apointment</p>
        {
          state === "Sign Up" && <div className='w-full'>
          <p>Full Name</p>
          <input className='border border-zinc-300 rounded w-full p-2 mt-1' type="text" onChange={(e) => setName(e.target.value)} value={name} required/>
        </div>
        }
        <div className='w-full'>
          <p>Email</p>
          <input className='border border-zinc-300 rounded w-full p-2 mt-1' type="email" onChange={(e) => setEmail(e.target.value)} value={email} required/>
        </div>
        <div className='w-full'>
          <p>Password</p>
          <input className='border border-zinc-300 rounded w-full p-2 mt-1' type="password" onChange={(e) => setPassword(e.target.value)} value={password} required/>
        </div>
        <button type='submit' className='bg-primary text-white w-full py-2 rounded-md text-base'>{state === 'Sign Up' ? "Create Account" : 'Login'}</button>
        {
          state === 'Sign Up'
          ? <p>Already have an account? <span onClick={()=> setState('Login')} className='text-primary underline cursor-pointer'>Login here</span></p>
          : <p>Create a new account. <span onClick={()=> setState('Sign Up')} className='text-primary underline cursor-pointer'>Sign up here</span></p>
        }
      </div>
    </form>
  )
}

export default Login

/* eslint-disable react-hooks/exhaustive-deps */
// eslint-disable-next-line no-unused-vars
import React, { useContext, useEffect, useState } from 'react'
import {AppContext} from '../context/AppContext'
import axios from 'axios'
import { toast } from 'react-toastify'


const MyAppointments = () => {

  const {backendUrl, token} = useContext(AppContext)
  const [appointments, setAppointments] = useState([])
  const months = ['', 'Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']

  const slotDateFormat = (slotDate) => {
    const dateArray = slotDate.split('_')
    return dateArray[0] + ' ' + months[Number(dateArray[1])] + ' ' + dateArray[2]
  }

  const getUserAppointments = async () => {
    try {
      const {data} = await axios.get(backendUrl + '/api/user/my-appointments', {headers: {token}})
      if (data.success) {
        setAppointments(data.appointments.reverse())
        console.log(data.appointments)
      }
    } catch (error) {
      console.log(error)
      toast.error(error.message)
    }
  }

  const cancelAppointment = async (appointmentId) => {
    try {

      const {data} = await axios.post(backendUrl + '/api/user/cancel-appointment', {appointmentId}, {headers: {token}})
      if (data.success) {
        toast.success(data.message)
        getUserAppointments()
      }else {
        toast.error(data.message)
      }
      
    } catch (error) {
      
      console.log(error)
      toast.error(error.message)
    }
  }


  useEffect(() => {
    if (token) {
      getUserAppointments()
    }
  }, [token])


  return (
    <div>
      <p className='pb-3 mt-12 font-medium text-zinc-700 border-b'>My Appointments</p>
      <div>
        {appointments.map((item, index) => (
          <div className='grid grid-cols-[1fr_3fr] gap-4 sm:flex sm:gap-6 py-2 border-b' key={index}>
            <div>
              <img className='w-32 bg-indigo-50' src={item.lawData.image} alt="" />
            </div>
            <div className='flex-1 text-sm text-zinc-600'>
              <p className='text-neutral-800 font-semibold'>{item.lawData.name}</p>
              <p>{item.lawData.practice}</p>
              <p className='text-zinc-700 font-medium mt-1'>Address:</p>
              <p className='text-xs'>{item.lawData.address.line1}</p>
              <p className='text-xs'>{item.lawData.address.line2}</p>
              <p className='text-xs mt-1'><span className='text-sm text-neutral-700 font-medium'>Date and Time:</span>{slotDateFormat(item.slotDate)} | {item.slotTime}</p>
            </div>
            <div></div>
            <div className='flex flex-col gap-2 justify-end'>
            {!item.cancelled && !item.isCompleted && <button onClick={()=>{cancelAppointment(item._id)}} className='text-sm text-stone-500 text-center sm:min-w-48 py-2 border rounded hover:bg-red-600 hover:text-white transition-all duration-300'>Cancel Appointment</button>}
            {item.cancelled && !item.isCompleted && <button className='sm:min-w-48 py-2 border border-red-500 rounded text-red-500 '>Appointment Cancelled</button>}
            {item.isCompleted && <button className='sm:min-w-48 py-2 border border-green-500 rounded text-green-500 '>Appointment Completed</button>}
            </div>
          </div>
        ))}
      </div>
    </div>
  )
}

export default MyAppointments

/* eslint-disable no-unused-vars */
// eslint-disable-next-line no-unused-vars
import React, {useContext, useState } from "react";
import { AppContext } from "../context/AppContext";
import { assets } from "../assets/assets";
import axios from "axios";
import { toast } from "react-toastify";
import { data } from "react-router-dom";


const MyProfile = () => {
  
  const {userData,setUserData, token, backendUrl, loadUserProfileData} = useContext(AppContext);

  const [isEdit, setIsEdit] = useState(false);
  const [image, setImage] = useState(false);

  const updateUserProfileData = async () => {
    try {

      const formData = new FormData();
      formData.append('name', userData.name);
      formData.append('phone', userData.phone);
      formData.append('address', JSON.stringify(userData.address));
      formData.append('dob', userData.dob);
      formData.append('gender', userData.gender);

      image && formData.append('image', image);

      const { data } = await axios.post(backendUrl + '/api/user/update-profile', formData, { headers: { token } });
      if (data.success) {
        toast.success(data.message);
        await loadUserProfileData();
        setIsEdit(false);
        setImage(false);
      } else {
        toast.error(data.message);
      }
      
    } catch (error) {
      console.log(error);
      toast.error(error.message);
    }
  }

  return userData && (
    <div className="max-w-lg flex flex-col gap-2 text-sm">
      {
        isEdit
        ? <label htmlFor="image">
          <div className="inline-block relative cursor-pointer">
            <img className="w-36 rounded opacity-75" src={image ? URL.createObjectURL(image) : userData.image} alt="" />
            <img className="w-10 absolute bottom-12 right-12" src={image ? '' : assets.upload_icon} alt="" />
          </div>
          <input onChange={(e) => setImage(e.target.files[0])} type="file" id="image" hidden/>
        </label>
        : <img className="w-36 rounded" src={userData.image} alt="" />
      }


      {
        isEdit 
          ? (<input className="bg-gray-50 text-3xl font-medium max-w-60 mt-4" type="text" value={userData.name} onChange={(e) => setUserData((prev) => ({ ...prev, name: e.target.value }))}/>) 
          : (<p className="text-3xl font-medium text-neutral-800 mt-4">{userData.name}</p>)
      }

      <hr className="bg-zinc-400 h-[1px] border-none" />
      <div>
        <p className="text-neutral-500 underline mt-3">Contact Information</p>
        <div className="grid grid-cols-[1fr_3fr] gap-y-2.5 mt-3 text-neutral-700">
          <p className="font-medium">Email:</p>
          <p className="text-blue-500">{userData.email}</p>
          <p className="font-medium">Phone:</p>
          {
            isEdit 
              ? (<input className="bg-gray-100 max-w-52" type="text" value={userData.phone} onChange={(e) => setUserData((prev) => ({ ...prev, phone: e.target.value }))}/>) 
              : (<p className="text-blue-400">{userData.phone}</p>)
          }
          <p className="font-medium">Address:</p>
          {
            isEdit 
              ? ( <p><input className="bg-gray-50" onChange={(e) => setUserData((prev) => ({...prev, address: { ...prev.address, line1: e.target.value }}))} value={userData.address.line1} type="text"/>
                    <br />
                    <input className="bg-gray-50" onChange={(e) => setUserData((prev) => ({...prev, address: { ...prev.address, line2: e.target.value }}))} value={userData.address.line2} type="text"/>
                  </p>
                  ) 
                  : (<p className="text-gray-500">
                      {userData.address.line1}
                      <br />
                      {userData.address.line2}
                    </p> 
                    )
            }
        </div>
      </div>
      <div>
        <p className="text-neutral-500 underline mt-3">Basic Information</p>
        <div className="grid grid-cols-[1fr_3fr] gap-y-2.5 mt-3 text-neutral-700">
          <p className="font-medium">Gender:</p>
          {
            isEdit 
              ? (
                 <select className="max-w-20 bg-gray-100" onChange={(e) => setUserData((prev) => ({ ...prev, gender: e.target.value }))}value={userData.gender}>
                  <option value="Male">Male</option>
                  <option value="Female">Female</option>
                </select>) 
              : (<p className="text-gray-400">{userData.gender}</p>)
          }
          <p className="font-medium">Birth Date:</p>
          {
            isEdit 
              ? ( <input className="bg-gray-100 max-w-28" onChange={(e) => setUserData((prev) => ({ ...prev, dob: e.target.value }))} value={userData.dob} type="date"/>) 
              : (<p className="text-gray-400">{userData.dob}</p>)
          }
        </div>
      </div>
      <div className="mt-10">
        {
          isEdit 
            ? (<button className="border border-primary px-8 py-2 rounded-full hover:bg-primary hover:text-white transition-all" onClick={updateUserProfileData}>Save</button>) 
            : (<button className="border border-primary px-8 py-2 rounded-full hover:bg-primary hover:text-white transition-all" onClick={() => setIsEdit(true)}>Edit</button>)
        }
      </div>
    </div>
  );
};

export default MyProfile;


/* eslint-disable no-unused-vars */
import React from 'react'
import { Route } from 'react-router-dom';
import { Routes } from 'react-router-dom';
import Home from './pages/Home';
import Lawyers from './pages/Lawyers';
import Login from './pages/Login';
import About from './pages/About';
import Contact from './pages/Contact';
import MyProfile from './pages/MyProfile';
import MyAppointments from './pages/MyAppointments';
import Appointment from './pages/Appointment';
import NavigationBar from './components/NavigationBar';
import Footer from './components/Footer';
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css'

const App = () => {
  return(
    <div className='mx-4 sm:mx-[10%]'>
      <ToastContainer/>
      <NavigationBar/>
        <Routes>
          <Route path="/" element={<Home/>} />
          <Route path="/lawyers" element={<Lawyers/>} />
          <Route path="/lawyers/:practice" element={<Lawyers/>} />
          <Route path="/login" element={<Login/>} />
          <Route path="/about" element={<About/>} />
          <Route path="/contact" element={<Contact/>} />
          <Route path="/my-profile" element={<MyProfile/>} />
          <Route path="/my-appointments" element={<MyAppointments/>} />
          <Route path="/appointment/:lawyerId" element={<Appointment/>} />
        </Routes>
        <Footer />
    </div>
  );
}

export default App

/* eslint-disable no-unused-vars */
import { createRoot } from 'react-dom/client'
import './index.css'
import App from './App.jsx'
import { BrowserRouter } from 'react-router-dom'
import { AppContext, AppContextProvider } from './context/AppContext';


createRoot(document.getElementById('root')).render(
  <BrowserRouter>
    <AppContextProvider>
      <App />
    </AppContextProvider>
  </BrowserRouter>,
)
